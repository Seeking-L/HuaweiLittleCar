import os
import json
from platformio.deveco_feature_toggling.features import Features  # pylint: disable=import-error
from platformio.deveco_feature_toggling.exception import ValidationError  # pylint: disable=import-error
from platformio.helpers import get_platformio_packages_path


try:
    manifest_path = os.path.join(get_platformio_packages_path(), "feature-toggling-manifest.json")
    manifest_realpath = os.path.realpath(manifest_path)
    __features_list = Features(json.load(open(manifest_realpath, 'rt')))

except FileNotFoundError:
    __features_list = Features({})
except json.decoder.JSONDecodeError:
    __features_list = Features({})
except ValidationError:
    __features_list = Features({})


def get(name, os_system=None):
    return __features_list.get(name=name, os_system=os_system)


def get_list(prefix=None):
    result = __features_list.to_list()
    return [x for x in result if x.startswith(prefix)] if prefix is not None else result
