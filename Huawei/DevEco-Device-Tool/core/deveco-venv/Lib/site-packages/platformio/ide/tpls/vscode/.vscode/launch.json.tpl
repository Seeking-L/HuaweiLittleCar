% from os.path import dirname, join
%
% def _escape_path(path):
%   return path.replace('\\\\', '//').replace('\\', '/').replace('"', '\\"')
% end
%
{
    "version": "0.2.0",
    "configurations": [
% environment_names = list(environments.keys())
% for idx in range(len(environment_names)):
%     environment_name = environment_names[idx]
%     environment = environments[environment_name]
        {
%     if environment.get('debug_client') == 'gdb':
            "type": "deveco-device-tool-debug",
            "request": "launch",
            "DevEcoDebugInitPath": "${workspaceRoot}/.deveco/.debug-cache/{{ environment_name }}",
            "servertype": "{{ environment.get('debug_tool') }}",
            "name": "{{ environment_name }}: DevEco GDB Launch",
            "executable": "{{ _escape_path(environment.get('prog_path')) }}",
            "toolchainBinDir": "{{ _escape_path(dirname(environment.get('gdb_path'))) }}",
            "projectEnvName": "{{ environment_name }}",
%         if environment.get('debug_tool') == 'qemu':
            "preLaunchTask": "deveco: debugQemu - {{ environment_name }}",
%         else:
            "preLaunchTask": "deveco: run debug server - {{ environment_name }}",
%		  end
%         if environment.get('svd_path'):
            "svdFile": "{{ _escape_path(environment.get('svd_path')) }}",
%         end
%         if environment.get('live_watch_enable'):
            "hssclient": "{{ _escape_path(environment.get('hssclient_path')) }}",
%         end
            "internalConsoleOptions": "openOnSessionStart"
        },
        {
            "type": "deveco-device-tool-debug",
            "request": "attach",
            "DevEcoDebugInitPath": "${workspaceRoot}/.deveco/.debug-cache/{{ environment_name }}",
            "servertype": "{{ environment.get('debug_tool') }}",
            "name": "{{ environment_name }}: DevEco GDB Attach",
            "executable": "{{ _escape_path(environment.get('prog_path')) }}",
            "toolchainBinDir": "{{ _escape_path(dirname(environment.get('gdb_path'))) }}",
            "projectEnvName": "{{ environment_name }}",
%         if environment.get('debug_tool') == 'qemu':
            "preLaunchTask": "deveco: debugQemu - {{ environment_name }}",
%         else:
            "preLaunchTask": "deveco: run debug server - {{ environment_name }}",
%		  end
%         if environment.get('svd_path'):
            "svdFile": "{{ _escape_path(environment.get('svd_path')) }}",
%         end
%         if environment.get('live_watch_enable'):
            "hssclient": "{{ _escape_path(environment.get('hssclient_path')) }}",
%         end
            "internalConsoleOptions": "openOnSessionStart"
%     elif environment.get('debug_client') == "lldb":
            "name": "{{ environment_name }}: DevEco LLDB debug",
            "type": "lldb",
            "request": "custom",
            "preLaunchTask": "deveco: run debug server - {{ environment_name }}",
            "targetCreateCommands": [
                "target create {{ _escape_path(environment.get('prog_path')) }}"
            ],
            "processCreateCommands": [
                "gdb-remote ${command:deveco-device-tool.getDebugRemotePort}",
%         if environment.get('debug_init_break') or environment.get('debug_extra_cmds'):
%             cmds = [environment.get('debug_init_break')] if environment.get('debug_init_break') else []
%             cmds.extend(environment.get('debug_extra_cmds', []) or [])
                {{ !",\n\t\t\t\t".join([f'"{s}"' for s in cmds ]) }}
%         end
            ],
            "exitCommands": [
                "process plugin packet monitor shutdown"
            ]
%     end

%     if idx != len(environment_names) - 1:
        },
%     else:
        }
%     end
% end
    ]
}
