import json
import ssl
from urllib.request import urlopen

import click
import packaging.version

from platformio.util import read_url_json
from platformio.commands.exception import UnknownError


@click.command("upgrade", short_help="check upgrade to deveco", hidden=True)
@click.option("--version", "-v", help="the deveco version", required=True)
def cli(version):
    result = {"state": False}
    version = packaging.version.parse(version)
    if not version.is_prerelease and not version.is_devrelease and not version.is_postrelease:
        result['state'] = check_upgrade_state(version)
    click.echo(json.dumps(result))


def check_upgrade_state(ver):
    try:
        devecostudio_drcn_url = read_url_json().get('devecostudio_drcn_url', '')
        context = ssl._create_unverified_context()
        req = urlopen(devecostudio_drcn_url, timeout=5, context=context)
        req_code = req.getcode()
        req_data = req.read().decode(encoding = 'utf-8')
        if req_code == 200 and req_data:
            data = json.loads(req_data)
            is_req = data and data.get('code') == 200
            plug_ersion = data and data.get('body') and data.get('body').get('plugVersion')
            if is_req and plug_ersion and ver < packaging.version.parse(plug_ersion):
                return True
    except Exception:  # pylint: disable=broad-except
        UnknownError('check upgrade error')
    return False
