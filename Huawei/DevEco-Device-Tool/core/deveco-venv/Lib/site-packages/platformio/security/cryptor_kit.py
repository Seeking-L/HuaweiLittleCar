"""
Copyright (c) Huawei Technologies Co., Ltd. 2021-2022. All rights reserved.
Description:
Create: 2021-9-7
"""

#  !/usr/bin/env python
#   -*- coding: utf-8 -*-
#
#

"""
encryption and decryption tool
"""
import base64
import secrets

from cryptography.hazmat.primitives.ciphers import (
    Cipher, algorithms, modes
)


class CryptorKit:
    """
    Encryption and decryption tools using the AES-GCM algorithm
    """
    def encrypt(self, key, msg):
        """
        Use a symmetric key to encrypt the plaintext into a 16-byte ciphertext.
        :param key: Symmetric Key, Byte type
        :param msg: plaintext:  Byte type
        :return: ciphertext, Byte type
        """
        iv = secrets.token_bytes(16)
        salt = secrets.token_bytes(64)
        encryptor = Cipher(
            algorithms.AES(key),
            modes.GCM(iv),
        ).encryptor()

        ciphertext = encryptor.update(msg) + encryptor.finalize()
        encrypted_msg = base64.b64encode(salt + iv + encryptor.tag + ciphertext)
        return encrypted_msg

    def decrypt(self, key, msg):
        """
        Decrypt the 16-byte ciphertext based on the symmetric key.
        :param key: Symmetric Key, Byte type
        :param msg: ciphertext, Byte type
        :return: ciphertext, Byte type
        """
        data = base64.b64decode(msg)
        iv = data[64:80]
        tag = data[80:96]
        encrypted = data[96:]
        decryptor = Cipher(
            algorithms.AES(key),
            modes.GCM(iv, tag),
        ).decryptor()

        return decryptor.update(encrypted) + decryptor.finalize()
