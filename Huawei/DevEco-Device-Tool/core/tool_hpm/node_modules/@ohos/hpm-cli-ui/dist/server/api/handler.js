"use strict";

var project = require('../service/project');

var PluginManager = require('../service/plugin-manager');

var taskService = require('../service/task-service');

var messageService = require('../service/message-service');

function getTextFile() {
  var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  return project.getTextFile(params.filename).then(function (json) {
    return {
      data: json
    };
  });
}

var getBundleJson = function getBundleJson() {
  return project.getBundleJSON().then(function (json) {
    return {
      data: json
    };
  });
};

function getAllPlugins() {
  return new PluginManager().then(function (pluginManager) {
    return {
      data: pluginManager.plugins
    };
  });
}

function watchTasksStatus(params, wsContext) {
  taskService.addStatusListener(wsContext);
  wsContext.registStop(function () {
    return stopWatchTasksStatus();
  });
  return Promise.resolve();
}

function watchTaskLog(params, wsContext) {
  taskService.addListener(params.name, wsContext);
  wsContext.registStop(function () {
    return stopWatchTaskLog(params);
  });
  return Promise.resolve();
}

function stopWatchTaskLog(params) {
  taskService.removeListener(params.name);
  return Promise.resolve();
}

function stopWatchTasksStatus() {
  taskService.removeStatusListener();
  return Promise.resolve();
}

function postMessage(params, wsContext) {
  messageService.addMessageListener(params.type, wsContext); // messageService.checkUpdata()

  return Promise.resolve();
}

module.exports = {
  getAllPlugins: getAllPlugins,
  getBundleJson: getBundleJson,
  getTextFile: getTextFile,
  watchTaskLog: watchTaskLog,
  watchTasksStatus: watchTasksStatus,
  postMessage: postMessage
};