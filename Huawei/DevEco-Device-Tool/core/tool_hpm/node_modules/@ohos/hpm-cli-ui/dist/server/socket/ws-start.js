"use strict";

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

var _require = require('../api'),
    getApi = _require.getApi,
    postApi = _require.postApi;

var WsStart = /*#__PURE__*/function () {
  function WsStart(_ref, wsContext) {
    var _ref$payload = _ref.payload,
        _ref$payload$url = _ref$payload.url,
        url = _ref$payload$url === void 0 ? '' : _ref$payload$url,
        _ref$payload$method = _ref$payload.method,
        method = _ref$payload$method === void 0 ? '' : _ref$payload$method,
        _ref$payload$data = _ref$payload.data,
        data = _ref$payload$data === void 0 ? null : _ref$payload$data;

    _classCallCheck(this, WsStart);

    this.getApi = getApi;
    this.postApi = postApi;
    this.url = url;
    this.method = method;
    this.data = data;
    this.wsContext = wsContext;

    switch (method.toLowerCase()) {
      case 'get':
        return this.runGet();

      case 'post':
        return this.runPost();

      default:
        return Promise.reject(new Error('Bad request'));
    }
  }

  _createClass(WsStart, [{
    key: "runGet",
    value: function runGet() {
      var func = this.getApi[this.url];

      if (typeof func === 'function') {
        return func(this.data, this.wsContext);
      }

      return Promise.reject(new Error('Bad request'));
    }
  }, {
    key: "runPost",
    value: function runPost() {
      var func = this.postApi[this.url];

      if (typeof func === 'function') {
        return func(this.data, this.wsContext);
      }

      return Promise.reject(new Error('Bad request'));
    }
  }]);

  return WsStart;
}();

module.exports = WsStart;